<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Robert Edmonds' blog</title><link href="http://blog.mycre.ws/" rel="alternate"></link><link href="http://blog.mycre.ws/feeds/all.atom.xml" rel="self"></link><id>http://blog.mycre.ws/</id><updated>2015-07-05T00:56:00+00:00</updated><entry><title>Git packaging workflow for py-lmdb</title><link href="http://blog.mycre.ws/articles/git-packaging-workflow-for-py-lmdb/" rel="alternate"></link><updated>2015-07-05T00:56:00+00:00</updated><author><name>Robert Edmonds</name></author><id>tag:blog.mycre.ws,2015-07-05:articles/git-packaging-workflow-for-py-lmdb/</id><summary type="html">&lt;p&gt;Recently, I packaged the &lt;a href="https://lmdb.readthedocs.org/en/release/"&gt;py-lmdb Python binding&lt;/a&gt; for the &lt;a href="http://symas.com/mdb/"&gt;LMDB database
library&lt;/a&gt;. This package is going to be team maintained by the &lt;a href="https://alioth.debian.org/projects/pkg-db/"&gt;pkg-db group&lt;/a&gt;,
which is responsible for maintaining BerkeleyDB and LMDB packages. Below are my
notes on (re-)Debianizing this package and how the Git repository for the source
package is laid out.&lt;/p&gt;
&lt;p&gt;The upstream &lt;code&gt;py-lmdb&lt;/code&gt; developer has a Git-centric workflow. Development is
done on the &lt;code&gt;master&lt;/code&gt; branch, with regular releases done as fast-forward merges
to the &lt;code&gt;release&lt;/code&gt; branch. Release tags of the form &lt;code&gt;py-lmdb_X.YZ&lt;/code&gt; are provided.
The only tarballs provided are the ones that GitHub automatically generates
from tags.  Since these tarballs are synthetic and the content of these
tarballs matches the content on the corresponding tag, we will ignore them in
favor of using the release tags directly. (The &lt;code&gt;--git-pristine-tar-commit&lt;/code&gt;
option to &lt;code&gt;gbp-buildpackage&lt;/code&gt; will be used so that &lt;code&gt;.orig.tar.gz&lt;/code&gt; files can be
replicated so that the Debian archive will &lt;a href="http://thread.gmane.org/gmane.linux.debian.devel.mentors/59711/focus=59721"&gt;accept subsequent uploads&lt;/a&gt;,
but tarballs are otherwise irrelevant to our workflow.)&lt;/p&gt;
&lt;p&gt;To make it clear that the release tags come from upstream's repository, they
should be prefixed with &lt;code&gt;upstream/&lt;/code&gt;, which would preferably result in a &lt;a href="http://dep.debian.net/deps/dep14/"&gt;DEP-14&lt;/a&gt;
compliant scheme. (Unfortunately, since upstream's release tags begin with
&lt;code&gt;py-lmdb_&lt;/code&gt;, this doesn't quite match the pattern that DEP-14 recommends.)&lt;/p&gt;
&lt;p&gt;Here is how the local packaging repository is initialized. Note that &lt;code&gt;git clone&lt;/code&gt;
isn't used, so that we can customize how the tags are fetched. Instead, we
create an empty Git repository and add the upstream repository as the &lt;code&gt;upstream&lt;/code&gt;
remote. The &lt;code&gt;--no-tags&lt;/code&gt; option is used, so that &lt;code&gt;git fetch&lt;/code&gt; does not import the
remote's tags. However, we also add a custom fetch refspec
&lt;code&gt;refs/tags/*:refs/tags/upstream/*&lt;/code&gt; so that the remote's tags are explicitly
fetched, but with the &lt;code&gt;upstream/&lt;/code&gt; prefix.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ mkdir py-lmdb
$ cd py-lmdb
$ git init
Initialized empty Git repository in /home/edmonds/debian/py-lmdb/.git/
$ git remote add --no-tags upstream https://github.com/dw/py-lmdb
$ git config --add remote.upstream.fetch 'refs/tags/*:refs/tags/upstream/*'
$ git fetch upstream
remote: Counting objects: 3336, done.
remote: Total 3336 (delta 0), reused 0 (delta 0), pack-reused 3336
Receiving objects: 100% (3336/3336), 2.15 MiB | 0 bytes/s, done.
Resolving deltas: 100% (1958/1958), done.
From https://github.com/dw/py-lmdb
 * [new branch]      master     -&amp;gt; upstream/master
 * [new branch]      release    -&amp;gt; upstream/release
 * [new branch]      win32-sparse-patch -&amp;gt; upstream/win32-sparse-patch
 * [new tag]         last-cython-version -&amp;gt; upstream/last-cython-version
 * [new tag]         py-lmdb_0.1 -&amp;gt; upstream/py-lmdb_0.1
 * [new tag]         py-lmdb_0.2 -&amp;gt; upstream/py-lmdb_0.2
 * [new tag]         py-lmdb_0.3 -&amp;gt; upstream/py-lmdb_0.3
 * [new tag]         py-lmdb_0.4 -&amp;gt; upstream/py-lmdb_0.4
 * [new tag]         py-lmdb_0.5 -&amp;gt; upstream/py-lmdb_0.5
 * [new tag]         py-lmdb_0.51 -&amp;gt; upstream/py-lmdb_0.51
 * [new tag]         py-lmdb_0.52 -&amp;gt; upstream/py-lmdb_0.52
 * [new tag]         py-lmdb_0.53 -&amp;gt; upstream/py-lmdb_0.53
 * [new tag]         py-lmdb_0.54 -&amp;gt; upstream/py-lmdb_0.54
 * [new tag]         py-lmdb_0.56 -&amp;gt; upstream/py-lmdb_0.56
 * [new tag]         py-lmdb_0.57 -&amp;gt; upstream/py-lmdb_0.57
 * [new tag]         py-lmdb_0.58 -&amp;gt; upstream/py-lmdb_0.58
 * [new tag]         py-lmdb_0.59 -&amp;gt; upstream/py-lmdb_0.59
 * [new tag]         py-lmdb_0.60 -&amp;gt; upstream/py-lmdb_0.60
 * [new tag]         py-lmdb_0.61 -&amp;gt; upstream/py-lmdb_0.61
 * [new tag]         py-lmdb_0.62 -&amp;gt; upstream/py-lmdb_0.62
 * [new tag]         py-lmdb_0.63 -&amp;gt; upstream/py-lmdb_0.63
 * [new tag]         py-lmdb_0.64 -&amp;gt; upstream/py-lmdb_0.64
 * [new tag]         py-lmdb_0.65 -&amp;gt; upstream/py-lmdb_0.65
 * [new tag]         py-lmdb_0.66 -&amp;gt; upstream/py-lmdb_0.66
 * [new tag]         py-lmdb_0.67 -&amp;gt; upstream/py-lmdb_0.67
 * [new tag]         py-lmdb_0.68 -&amp;gt; upstream/py-lmdb_0.68
 * [new tag]         py-lmdb_0.69 -&amp;gt; upstream/py-lmdb_0.69
 * [new tag]         py-lmdb_0.70 -&amp;gt; upstream/py-lmdb_0.70
 * [new tag]         py-lmdb_0.71 -&amp;gt; upstream/py-lmdb_0.71
 * [new tag]         py-lmdb_0.72 -&amp;gt; upstream/py-lmdb_0.72
 * [new tag]         py-lmdb_0.73 -&amp;gt; upstream/py-lmdb_0.73
 * [new tag]         py-lmdb_0.74 -&amp;gt; upstream/py-lmdb_0.74
 * [new tag]         py-lmdb_0.75 -&amp;gt; upstream/py-lmdb_0.75
 * [new tag]         py-lmdb_0.76 -&amp;gt; upstream/py-lmdb_0.76
 * [new tag]         py-lmdb_0.77 -&amp;gt; upstream/py-lmdb_0.77
 * [new tag]         py-lmdb_0.78 -&amp;gt; upstream/py-lmdb_0.78
 * [new tag]         py-lmdb_0.79 -&amp;gt; upstream/py-lmdb_0.79
 * [new tag]         py-lmdb_0.80 -&amp;gt; upstream/py-lmdb_0.80
 * [new tag]         py-lmdb_0.81 -&amp;gt; upstream/py-lmdb_0.81
 * [new tag]         py-lmdb_0.82 -&amp;gt; upstream/py-lmdb_0.82
 * [new tag]         py-lmdb_0.83 -&amp;gt; upstream/py-lmdb_0.83
 * [new tag]         py-lmdb_0.84 -&amp;gt; upstream/py-lmdb_0.84
 * [new tag]         py-lmdb_0.85 -&amp;gt; upstream/py-lmdb_0.85
 * [new tag]         py-lmdb_0.86 -&amp;gt; upstream/py-lmdb_0.86
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that at this point we have content from the upstream remote in our local
repository, but we don't have any local branches:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git status
On branch master

Initial commit

nothing to commit (create/copy files and use &amp;quot;git add&amp;quot; to track)
$ git branch -a
  remotes/upstream/master
  remotes/upstream/release
  remotes/upstream/win32-sparse-patch
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will use the &lt;a href="http://dep.debian.net/deps/dep14/"&gt;DEP-14&lt;/a&gt; naming scheme for the packaging branches, so the
branch for packages targeted at &lt;code&gt;unstable&lt;/code&gt; will be called &lt;code&gt;debian/sid&lt;/code&gt;. Since I
already made an &lt;a href="https://tracker.debian.org/news/689247"&gt;initial 0.84-1 upload&lt;/a&gt;, we need to start the &lt;code&gt;debian/sid&lt;/code&gt;
branch from the upstream 0.84 tag and import the original packaging content
from that upload. The &lt;code&gt;--no-track&lt;/code&gt; flag is passed to &lt;code&gt;git checkout&lt;/code&gt; initially
so that Git doesn't consider the upstream release tag &lt;code&gt;upstream/py-lmdb_0.84&lt;/code&gt;
to be the upstream branch for our packaging branch.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git checkout --no-track -b debian/sid upstream/py-lmdb_0.84
Switched to a new branch 'debian/sid'
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point I imported the original packaging content for 0.84-1 with
&lt;code&gt;git am&lt;/code&gt;. Then, I signed the &lt;code&gt;debian/0.84-1&lt;/code&gt; tag:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git tag -s -m 'Debian release 0.84-1' debian/0.84-1
$ git verify-tag debian/0.84-1
gpg: Signature made Sat 04 Jul 2015 02:49:42 PM EDT using RSA key ID AAF6CDAE
gpg: Good signature from &amp;quot;Robert Edmonds &amp;lt;edmonds@mycre.ws&amp;gt;&amp;quot; [ultimate]
gpg:                 aka &amp;quot;Robert Edmonds &amp;lt;edmonds@fsi.io&amp;gt;&amp;quot; [ultimate]
gpg:                 aka &amp;quot;Robert Edmonds &amp;lt;edmonds@debian.org&amp;gt;&amp;quot; [ultimate]
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;New upstream releases are integrated by fetching new upstream tags and
non-fast-forward merging into the packaging branch. The latest release is 0.86,
so we merge from the &lt;code&gt;upstream/py-lmdb_0.86&lt;/code&gt; tag.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git fetch upstream --dry-run
[...]
$ git fetch upstream
[...]
$ git checkout debian/sid
Already on 'debian/sid'
$ git merge --no-ff --no-edit upstream/py-lmdb_0.86
Merge made by the 'recursive' strategy.
 ChangeLog                     |  46 ++++++++++++++
 docs/index.rst                |  46 +++++++++++++-
 docs/themes/acid/layout.html  |   4 +-
 examples/dirtybench-gdbm.py   |   6 ++
 examples/dirtybench.py        |  19 ++++++
 examples/nastybench.py        |  18 ++++--
 examples/parabench.py         |   6 ++
 lib/lmdb.h                    |  37 ++++++-----
 lib/mdb.c                     | 281 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++---------------------
 lib/midl.c                    |   2 +-
 lib/midl.h                    |   2 +-
 lib/py-lmdb/preload.h         |  48 ++++++++++++++
 lmdb/__init__.py              |   2 +-
 lmdb/cffi.py                  | 120 ++++++++++++++++++++++++-----------
 lmdb/cpython.c                |  86 +++++++++++++++++++------
 lmdb/tool.py                  |   5 +-
 misc/gdb.commands             |  21 ++++++
 misc/runtests-travisci.sh     |   3 +-
 misc/runtests-ubuntu-12-04.sh |  28 ++++----
 setup.py                      |   2 +
 tests/crash_test.py           |  22 +++++++
 tests/cursor_test.py          |  37 +++++++++++
 tests/env_test.py             |  73 +++++++++++++++++++++
 tests/testlib.py              |  14 +++-
 tests/txn_test.py             |  20 ++++++
 25 files changed, 773 insertions(+), 175 deletions(-)
 create mode 100644 lib/py-lmdb/preload.h
 create mode 100644 misc/gdb.commands
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here I did some additional development work like editing the &lt;code&gt;debian/gbp.conf&lt;/code&gt;
file and applying a fix for &lt;a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=790738"&gt;#790738&lt;/a&gt; to make the package build reproducibly.
The package is now ready for an &lt;a href="https://tracker.debian.org/news/695543"&gt;0.86-1 upload&lt;/a&gt;, so I ran the following
&lt;code&gt;gbp dch&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ gbp dch --release --auto --new-version=0.86-1 --commit
gbp:info: Found tag for topmost changelog version '6bdbb56c04571fe2d5d22aa0287ab0dc83959de5'
gbp:info: Continuing from commit '6bdbb56c04571fe2d5d22aa0287ab0dc83959de5'
gbp:info: Changelog has been committed for version 0.86-1
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This automatically generates a changelog entry for 0.86-1, but it includes
commit summaries for all of the upstream commits since the last release, which I
had to edit out.&lt;/p&gt;
&lt;p&gt;Then, I used &lt;code&gt;gbp buildpackage&lt;/code&gt; with &lt;code&gt;BUILDER=pbuilder&lt;/code&gt; to build the package in
a clean, up-to-date &lt;code&gt;sid&lt;/code&gt; chroot. After checking the result, I signed the
&lt;code&gt;debian/0.86-1&lt;/code&gt; tag:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git tag -s -m 'Debian release 0.86-1' debian/0.86-1
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The package is now ready to be pushed to &lt;code&gt;git.debian.org&lt;/code&gt;. First, a &lt;a href="https://wiki.debian.org/Alioth/Git#Separate_project"&gt;bare
repository is initialized&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ ssh git.debian.org
edmonds@moszumanska:~$ cd /srv/git.debian.org/git/pkg-db/
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db$ umask 002
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db$ mkdir py-lmdb.git
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db$ cd py-lmdb.git/
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ git --bare init --shared
Initialized empty shared Git repository in /srv/git.debian.org/git/pkg-db/py-lmdb.git/
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ echo 'py-lmdb Debian packaging' &amp;gt; description
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ mv hooks/post-update.sample hooks/post-update
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ chmod a+x hooks/post-update
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ logout
Shared connection to git.debian.org closed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, we add a new &lt;code&gt;debian&lt;/code&gt; remote to our local packaging repository. Per our
&lt;a href="http://anonscm.debian.org/cgit/pkg-db/py-lmdb.git/plain/debian/README.source"&gt;repository conventions&lt;/a&gt;, we need to ensure that only branch names matching
&lt;code&gt;debian/*&lt;/code&gt; and &lt;code&gt;pristine-tar&lt;/code&gt; and tag names matching &lt;code&gt;debian/*&lt;/code&gt; and
&lt;code&gt;upstream/*&lt;/code&gt; are pushed to the &lt;code&gt;debian&lt;/code&gt; remote when we run &lt;code&gt;git push debian&lt;/code&gt;,
so we add a a set of &lt;code&gt;remote.debian.push&lt;/code&gt; refspecs that correspond to these
conventions. We also add an explicit &lt;code&gt;remote.debian.fetch&lt;/code&gt; refspec to fetch
tags.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git remote add debian ssh://git.debian.org/git/pkg-db/py-lmdb.git
$ git config --add remote.debian.push 'refs/tags/debian/*'
$ git config --add remote.debian.push 'refs/tags/upstream/*'
$ git config --add remote.debian.push 'refs/heads/debian/*'
$ git config --add remote.debian.push 'refs/heads/pristine-tar'
$ git config --add remote.debian.fetch 'refs/tags/*:refs/tags/*'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now run the initial push to the remote Git repository. The &lt;code&gt;--set-upstream&lt;/code&gt;
option is used so that our local branches will be configured to track the
corresponding remote branches. Also note that the &lt;code&gt;debian/*&lt;/code&gt; and &lt;code&gt;upstream/*&lt;/code&gt;
tags are pushed as well.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git push debian --set-upstream
Counting objects: 3333, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (1083/1083), done.
Writing objects: 100% (3333/3333), 1.37 MiB | 0 bytes/s, done.
Total 3333 (delta 2231), reused 3314 (delta 2218)
To ssh://git.debian.org/git/pkg-db/py-lmdb.git
 * [new branch]      pristine-tar -&amp;gt; pristine-tar
 * [new branch]      debian/sid -&amp;gt; debian/sid
 * [new tag]         debian/0.84-1 -&amp;gt; debian/0.84-1
 * [new tag]         debian/0.86-1 -&amp;gt; debian/0.86-1
 * [new tag]         upstream/last-cython-version -&amp;gt; upstream/last-cython-version
 * [new tag]         upstream/py-lmdb_0.1 -&amp;gt; upstream/py-lmdb_0.1
 * [new tag]         upstream/py-lmdb_0.2 -&amp;gt; upstream/py-lmdb_0.2
 * [new tag]         upstream/py-lmdb_0.3 -&amp;gt; upstream/py-lmdb_0.3
 * [new tag]         upstream/py-lmdb_0.4 -&amp;gt; upstream/py-lmdb_0.4
 * [new tag]         upstream/py-lmdb_0.5 -&amp;gt; upstream/py-lmdb_0.5
 * [new tag]         upstream/py-lmdb_0.51 -&amp;gt; upstream/py-lmdb_0.51
 * [new tag]         upstream/py-lmdb_0.52 -&amp;gt; upstream/py-lmdb_0.52
 * [new tag]         upstream/py-lmdb_0.53 -&amp;gt; upstream/py-lmdb_0.53
 * [new tag]         upstream/py-lmdb_0.54 -&amp;gt; upstream/py-lmdb_0.54
 * [new tag]         upstream/py-lmdb_0.56 -&amp;gt; upstream/py-lmdb_0.56
 * [new tag]         upstream/py-lmdb_0.57 -&amp;gt; upstream/py-lmdb_0.57
 * [new tag]         upstream/py-lmdb_0.58 -&amp;gt; upstream/py-lmdb_0.58
 * [new tag]         upstream/py-lmdb_0.59 -&amp;gt; upstream/py-lmdb_0.59
 * [new tag]         upstream/py-lmdb_0.60 -&amp;gt; upstream/py-lmdb_0.60
 * [new tag]         upstream/py-lmdb_0.61 -&amp;gt; upstream/py-lmdb_0.61
 * [new tag]         upstream/py-lmdb_0.62 -&amp;gt; upstream/py-lmdb_0.62
 * [new tag]         upstream/py-lmdb_0.63 -&amp;gt; upstream/py-lmdb_0.63
 * [new tag]         upstream/py-lmdb_0.64 -&amp;gt; upstream/py-lmdb_0.64
 * [new tag]         upstream/py-lmdb_0.65 -&amp;gt; upstream/py-lmdb_0.65
 * [new tag]         upstream/py-lmdb_0.66 -&amp;gt; upstream/py-lmdb_0.66
 * [new tag]         upstream/py-lmdb_0.67 -&amp;gt; upstream/py-lmdb_0.67
 * [new tag]         upstream/py-lmdb_0.68 -&amp;gt; upstream/py-lmdb_0.68
 * [new tag]         upstream/py-lmdb_0.69 -&amp;gt; upstream/py-lmdb_0.69
 * [new tag]         upstream/py-lmdb_0.70 -&amp;gt; upstream/py-lmdb_0.70
 * [new tag]         upstream/py-lmdb_0.71 -&amp;gt; upstream/py-lmdb_0.71
 * [new tag]         upstream/py-lmdb_0.72 -&amp;gt; upstream/py-lmdb_0.72
 * [new tag]         upstream/py-lmdb_0.73 -&amp;gt; upstream/py-lmdb_0.73
 * [new tag]         upstream/py-lmdb_0.74 -&amp;gt; upstream/py-lmdb_0.74
 * [new tag]         upstream/py-lmdb_0.75 -&amp;gt; upstream/py-lmdb_0.75
 * [new tag]         upstream/py-lmdb_0.76 -&amp;gt; upstream/py-lmdb_0.76
 * [new tag]         upstream/py-lmdb_0.77 -&amp;gt; upstream/py-lmdb_0.77
 * [new tag]         upstream/py-lmdb_0.78 -&amp;gt; upstream/py-lmdb_0.78
 * [new tag]         upstream/py-lmdb_0.79 -&amp;gt; upstream/py-lmdb_0.79
 * [new tag]         upstream/py-lmdb_0.80 -&amp;gt; upstream/py-lmdb_0.80
 * [new tag]         upstream/py-lmdb_0.81 -&amp;gt; upstream/py-lmdb_0.81
 * [new tag]         upstream/py-lmdb_0.82 -&amp;gt; upstream/py-lmdb_0.82
 * [new tag]         upstream/py-lmdb_0.83 -&amp;gt; upstream/py-lmdb_0.83
 * [new tag]         upstream/py-lmdb_0.84 -&amp;gt; upstream/py-lmdb_0.84
 * [new tag]         upstream/py-lmdb_0.85 -&amp;gt; upstream/py-lmdb_0.85
 * [new tag]         upstream/py-lmdb_0.86 -&amp;gt; upstream/py-lmdb_0.86
Branch pristine-tar set up to track remote branch pristine-tar from debian.
Branch debian/sid set up to track remote branch debian/sid from debian.
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the initial push, we need to configure the remote repository so that
clones will checkout the &lt;code&gt;debian/sid&lt;/code&gt; branch by default:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ ssh git.debian.org
edmonds@moszumanska:~$ cd /srv/git.debian.org/git/pkg-db/py-lmdb.git/
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ git symbolic-ref HEAD refs/heads/debian/sid
edmonds@moszumanska:/srv/git.debian.org/git/pkg-db/py-lmdb.git$ logout
Shared connection to git.debian.org closed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can check if there are any updates in upstream's Git repository with the
following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git fetch upstream --dry-run -v
From https://github.com/dw/py-lmdb
 = [up to date]      master     -&amp;gt; upstream/master
 = [up to date]      release    -&amp;gt; upstream/release
 = [up to date]      win32-sparse-patch -&amp;gt; upstream/win32-sparse-patch
 = [up to date]      last-cython-version -&amp;gt; upstream/last-cython-version
 = [up to date]      py-lmdb_0.1 -&amp;gt; upstream/py-lmdb_0.1
 = [up to date]      py-lmdb_0.2 -&amp;gt; upstream/py-lmdb_0.2
 = [up to date]      py-lmdb_0.3 -&amp;gt; upstream/py-lmdb_0.3
 = [up to date]      py-lmdb_0.4 -&amp;gt; upstream/py-lmdb_0.4
 = [up to date]      py-lmdb_0.5 -&amp;gt; upstream/py-lmdb_0.5
 = [up to date]      py-lmdb_0.51 -&amp;gt; upstream/py-lmdb_0.51
 = [up to date]      py-lmdb_0.52 -&amp;gt; upstream/py-lmdb_0.52
 = [up to date]      py-lmdb_0.53 -&amp;gt; upstream/py-lmdb_0.53
 = [up to date]      py-lmdb_0.54 -&amp;gt; upstream/py-lmdb_0.54
 = [up to date]      py-lmdb_0.56 -&amp;gt; upstream/py-lmdb_0.56
 = [up to date]      py-lmdb_0.57 -&amp;gt; upstream/py-lmdb_0.57
 = [up to date]      py-lmdb_0.58 -&amp;gt; upstream/py-lmdb_0.58
 = [up to date]      py-lmdb_0.59 -&amp;gt; upstream/py-lmdb_0.59
 = [up to date]      py-lmdb_0.60 -&amp;gt; upstream/py-lmdb_0.60
 = [up to date]      py-lmdb_0.61 -&amp;gt; upstream/py-lmdb_0.61
 = [up to date]      py-lmdb_0.62 -&amp;gt; upstream/py-lmdb_0.62
 = [up to date]      py-lmdb_0.63 -&amp;gt; upstream/py-lmdb_0.63
 = [up to date]      py-lmdb_0.64 -&amp;gt; upstream/py-lmdb_0.64
 = [up to date]      py-lmdb_0.65 -&amp;gt; upstream/py-lmdb_0.65
 = [up to date]      py-lmdb_0.66 -&amp;gt; upstream/py-lmdb_0.66
 = [up to date]      py-lmdb_0.67 -&amp;gt; upstream/py-lmdb_0.67
 = [up to date]      py-lmdb_0.68 -&amp;gt; upstream/py-lmdb_0.68
 = [up to date]      py-lmdb_0.69 -&amp;gt; upstream/py-lmdb_0.69
 = [up to date]      py-lmdb_0.70 -&amp;gt; upstream/py-lmdb_0.70
 = [up to date]      py-lmdb_0.71 -&amp;gt; upstream/py-lmdb_0.71
 = [up to date]      py-lmdb_0.72 -&amp;gt; upstream/py-lmdb_0.72
 = [up to date]      py-lmdb_0.73 -&amp;gt; upstream/py-lmdb_0.73
 = [up to date]      py-lmdb_0.74 -&amp;gt; upstream/py-lmdb_0.74
 = [up to date]      py-lmdb_0.75 -&amp;gt; upstream/py-lmdb_0.75
 = [up to date]      py-lmdb_0.76 -&amp;gt; upstream/py-lmdb_0.76
 = [up to date]      py-lmdb_0.77 -&amp;gt; upstream/py-lmdb_0.77
 = [up to date]      py-lmdb_0.78 -&amp;gt; upstream/py-lmdb_0.78
 = [up to date]      py-lmdb_0.79 -&amp;gt; upstream/py-lmdb_0.79
 = [up to date]      py-lmdb_0.80 -&amp;gt; upstream/py-lmdb_0.80
 = [up to date]      py-lmdb_0.81 -&amp;gt; upstream/py-lmdb_0.81
 = [up to date]      py-lmdb_0.82 -&amp;gt; upstream/py-lmdb_0.82
 = [up to date]      py-lmdb_0.83 -&amp;gt; upstream/py-lmdb_0.83
 = [up to date]      py-lmdb_0.84 -&amp;gt; upstream/py-lmdb_0.84
 = [up to date]      py-lmdb_0.85 -&amp;gt; upstream/py-lmdb_0.85
 = [up to date]      py-lmdb_0.86 -&amp;gt; upstream/py-lmdb_0.86
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can check if any co-maintainers have pushed updates to the &lt;code&gt;git.debian.org&lt;/code&gt;
repository with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git fetch debian --dry-run -v
From ssh://git.debian.org/git/pkg-db/py-lmdb
 = [up to date]      debian/sid -&amp;gt; debian/debian/sid
 = [up to date]      pristine-tar -&amp;gt; debian/pristine-tar
 = [up to date]      debian/0.84-1 -&amp;gt; debian/0.84-1
 = [up to date]      debian/0.86-1 -&amp;gt; debian/0.86-1
 = [up to date]      upstream/last-cython-version -&amp;gt; upstream/last-cython-version
 = [up to date]      upstream/py-lmdb_0.1 -&amp;gt; upstream/py-lmdb_0.1
 = [up to date]      upstream/py-lmdb_0.2 -&amp;gt; upstream/py-lmdb_0.2
 = [up to date]      upstream/py-lmdb_0.3 -&amp;gt; upstream/py-lmdb_0.3
 = [up to date]      upstream/py-lmdb_0.4 -&amp;gt; upstream/py-lmdb_0.4
 = [up to date]      upstream/py-lmdb_0.5 -&amp;gt; upstream/py-lmdb_0.5
 = [up to date]      upstream/py-lmdb_0.51 -&amp;gt; upstream/py-lmdb_0.51
 = [up to date]      upstream/py-lmdb_0.52 -&amp;gt; upstream/py-lmdb_0.52
 = [up to date]      upstream/py-lmdb_0.53 -&amp;gt; upstream/py-lmdb_0.53
 = [up to date]      upstream/py-lmdb_0.54 -&amp;gt; upstream/py-lmdb_0.54
 = [up to date]      upstream/py-lmdb_0.56 -&amp;gt; upstream/py-lmdb_0.56
 = [up to date]      upstream/py-lmdb_0.57 -&amp;gt; upstream/py-lmdb_0.57
 = [up to date]      upstream/py-lmdb_0.58 -&amp;gt; upstream/py-lmdb_0.58
 = [up to date]      upstream/py-lmdb_0.59 -&amp;gt; upstream/py-lmdb_0.59
 = [up to date]      upstream/py-lmdb_0.60 -&amp;gt; upstream/py-lmdb_0.60
 = [up to date]      upstream/py-lmdb_0.61 -&amp;gt; upstream/py-lmdb_0.61
 = [up to date]      upstream/py-lmdb_0.62 -&amp;gt; upstream/py-lmdb_0.62
 = [up to date]      upstream/py-lmdb_0.63 -&amp;gt; upstream/py-lmdb_0.63
 = [up to date]      upstream/py-lmdb_0.64 -&amp;gt; upstream/py-lmdb_0.64
 = [up to date]      upstream/py-lmdb_0.65 -&amp;gt; upstream/py-lmdb_0.65
 = [up to date]      upstream/py-lmdb_0.66 -&amp;gt; upstream/py-lmdb_0.66
 = [up to date]      upstream/py-lmdb_0.67 -&amp;gt; upstream/py-lmdb_0.67
 = [up to date]      upstream/py-lmdb_0.68 -&amp;gt; upstream/py-lmdb_0.68
 = [up to date]      upstream/py-lmdb_0.69 -&amp;gt; upstream/py-lmdb_0.69
 = [up to date]      upstream/py-lmdb_0.70 -&amp;gt; upstream/py-lmdb_0.70
 = [up to date]      upstream/py-lmdb_0.71 -&amp;gt; upstream/py-lmdb_0.71
 = [up to date]      upstream/py-lmdb_0.72 -&amp;gt; upstream/py-lmdb_0.72
 = [up to date]      upstream/py-lmdb_0.73 -&amp;gt; upstream/py-lmdb_0.73
 = [up to date]      upstream/py-lmdb_0.74 -&amp;gt; upstream/py-lmdb_0.74
 = [up to date]      upstream/py-lmdb_0.75 -&amp;gt; upstream/py-lmdb_0.75
 = [up to date]      upstream/py-lmdb_0.76 -&amp;gt; upstream/py-lmdb_0.76
 = [up to date]      upstream/py-lmdb_0.77 -&amp;gt; upstream/py-lmdb_0.77
 = [up to date]      upstream/py-lmdb_0.78 -&amp;gt; upstream/py-lmdb_0.78
 = [up to date]      upstream/py-lmdb_0.79 -&amp;gt; upstream/py-lmdb_0.79
 = [up to date]      upstream/py-lmdb_0.80 -&amp;gt; upstream/py-lmdb_0.80
 = [up to date]      upstream/py-lmdb_0.81 -&amp;gt; upstream/py-lmdb_0.81
 = [up to date]      upstream/py-lmdb_0.82 -&amp;gt; upstream/py-lmdb_0.82
 = [up to date]      upstream/py-lmdb_0.83 -&amp;gt; upstream/py-lmdb_0.83
 = [up to date]      upstream/py-lmdb_0.84 -&amp;gt; upstream/py-lmdb_0.84
 = [up to date]      upstream/py-lmdb_0.85 -&amp;gt; upstream/py-lmdb_0.85
 = [up to date]      upstream/py-lmdb_0.86 -&amp;gt; upstream/py-lmdb_0.86
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can check if anything needs to be pushed from our local repository to the
&lt;code&gt;git.debian.org&lt;/code&gt; repository with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git push debian --dry-run -v
Pushing to ssh://git.debian.org/git/pkg-db/py-lmdb.git
To ssh://git.debian.org/git/pkg-db/py-lmdb.git
 = [up to date]      debian/sid -&amp;gt; debian/sid
 = [up to date]      pristine-tar -&amp;gt; pristine-tar
 = [up to date]      debian/0.84-1 -&amp;gt; debian/0.84-1
 = [up to date]      debian/0.86-1 -&amp;gt; debian/0.86-1
 = [up to date]      upstream/last-cython-version -&amp;gt; upstream/last-cython-version
 = [up to date]      upstream/py-lmdb_0.1 -&amp;gt; upstream/py-lmdb_0.1
 = [up to date]      upstream/py-lmdb_0.2 -&amp;gt; upstream/py-lmdb_0.2
 = [up to date]      upstream/py-lmdb_0.3 -&amp;gt; upstream/py-lmdb_0.3
 = [up to date]      upstream/py-lmdb_0.4 -&amp;gt; upstream/py-lmdb_0.4
 = [up to date]      upstream/py-lmdb_0.5 -&amp;gt; upstream/py-lmdb_0.5
 = [up to date]      upstream/py-lmdb_0.51 -&amp;gt; upstream/py-lmdb_0.51
 = [up to date]      upstream/py-lmdb_0.52 -&amp;gt; upstream/py-lmdb_0.52
 = [up to date]      upstream/py-lmdb_0.53 -&amp;gt; upstream/py-lmdb_0.53
 = [up to date]      upstream/py-lmdb_0.54 -&amp;gt; upstream/py-lmdb_0.54
 = [up to date]      upstream/py-lmdb_0.56 -&amp;gt; upstream/py-lmdb_0.56
 = [up to date]      upstream/py-lmdb_0.57 -&amp;gt; upstream/py-lmdb_0.57
 = [up to date]      upstream/py-lmdb_0.58 -&amp;gt; upstream/py-lmdb_0.58
 = [up to date]      upstream/py-lmdb_0.59 -&amp;gt; upstream/py-lmdb_0.59
 = [up to date]      upstream/py-lmdb_0.60 -&amp;gt; upstream/py-lmdb_0.60
 = [up to date]      upstream/py-lmdb_0.61 -&amp;gt; upstream/py-lmdb_0.61
 = [up to date]      upstream/py-lmdb_0.62 -&amp;gt; upstream/py-lmdb_0.62
 = [up to date]      upstream/py-lmdb_0.63 -&amp;gt; upstream/py-lmdb_0.63
 = [up to date]      upstream/py-lmdb_0.64 -&amp;gt; upstream/py-lmdb_0.64
 = [up to date]      upstream/py-lmdb_0.65 -&amp;gt; upstream/py-lmdb_0.65
 = [up to date]      upstream/py-lmdb_0.66 -&amp;gt; upstream/py-lmdb_0.66
 = [up to date]      upstream/py-lmdb_0.67 -&amp;gt; upstream/py-lmdb_0.67
 = [up to date]      upstream/py-lmdb_0.68 -&amp;gt; upstream/py-lmdb_0.68
 = [up to date]      upstream/py-lmdb_0.69 -&amp;gt; upstream/py-lmdb_0.69
 = [up to date]      upstream/py-lmdb_0.70 -&amp;gt; upstream/py-lmdb_0.70
 = [up to date]      upstream/py-lmdb_0.71 -&amp;gt; upstream/py-lmdb_0.71
 = [up to date]      upstream/py-lmdb_0.72 -&amp;gt; upstream/py-lmdb_0.72
 = [up to date]      upstream/py-lmdb_0.73 -&amp;gt; upstream/py-lmdb_0.73
 = [up to date]      upstream/py-lmdb_0.74 -&amp;gt; upstream/py-lmdb_0.74
 = [up to date]      upstream/py-lmdb_0.75 -&amp;gt; upstream/py-lmdb_0.75
 = [up to date]      upstream/py-lmdb_0.76 -&amp;gt; upstream/py-lmdb_0.76
 = [up to date]      upstream/py-lmdb_0.77 -&amp;gt; upstream/py-lmdb_0.77
 = [up to date]      upstream/py-lmdb_0.78 -&amp;gt; upstream/py-lmdb_0.78
 = [up to date]      upstream/py-lmdb_0.79 -&amp;gt; upstream/py-lmdb_0.79
 = [up to date]      upstream/py-lmdb_0.80 -&amp;gt; upstream/py-lmdb_0.80
 = [up to date]      upstream/py-lmdb_0.81 -&amp;gt; upstream/py-lmdb_0.81
 = [up to date]      upstream/py-lmdb_0.82 -&amp;gt; upstream/py-lmdb_0.82
 = [up to date]      upstream/py-lmdb_0.83 -&amp;gt; upstream/py-lmdb_0.83
 = [up to date]      upstream/py-lmdb_0.84 -&amp;gt; upstream/py-lmdb_0.84
 = [up to date]      upstream/py-lmdb_0.85 -&amp;gt; upstream/py-lmdb_0.85
 = [up to date]      upstream/py-lmdb_0.86 -&amp;gt; upstream/py-lmdb_0.86
Everything up-to-date
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, in order to set up a fresh local clone of the &lt;code&gt;git.debian.org&lt;/code&gt;
repository that's configured like the local repository created above, we have
to do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git clone --origin debian ssh://git.debian.org/git/pkg-db/py-lmdb.git
Cloning into 'py-lmdb'...
remote: Counting objects: 3333, done.
remote: Compressing objects: 100% (1070/1070), done.
remote: Total 3333 (delta 2231), reused 3333 (delta 2231)
Receiving objects: 100% (3333/3333), 1.37 MiB | 1.11 MiB/s, done.
Resolving deltas: 100% (2231/2231), done.
Checking connectivity... done.
$ cd py-lmdb
$ git remote add --no-tags upstream https://github.com/dw/py-lmdb
$ git config --add remote.upstream.fetch 'refs/tags/*:refs/tags/upstream/*'
$ git fetch upstream
remote: Counting objects: 56, done.
remote: Total 56 (delta 25), reused 25 (delta 25), pack-reused 31
Unpacking objects: 100% (56/56), done.
From https://github.com/dw/py-lmdb
 * [new branch]      master     -&amp;gt; upstream/master
 * [new branch]      release    -&amp;gt; upstream/release
 * [new branch]      win32-sparse-patch -&amp;gt; upstream/win32-sparse-patch
$ git branch --track pristine-tar debian/pristine-tar 
Branch pristine-tar set up to track remote branch pristine-tar from debian.
$ git config --add remote.debian.push 'refs/tags/debian/*'
$ git config --add remote.debian.push 'refs/tags/upstream/*'
$ git config --add remote.debian.push 'refs/heads/debian/*'
$ git config --add remote.debian.push 'refs/heads/pristine-tar'
$ git config --add remote.debian.fetch 'refs/tags/*:refs/tags/*'
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a fair amount of effort beyond a simple &lt;code&gt;git clone&lt;/code&gt;, though, so I
wonder if anything can be done to optimize this.&lt;/p&gt;</summary></entry><entry><title>Bad Google repository signatures</title><link href="http://blog.mycre.ws/articles/bad-google-repository-signatures/" rel="alternate"></link><updated>2015-03-22T03:50:57+00:00</updated><author><name>Robert Edmonds</name></author><id>tag:blog.mycre.ws,2015-03-22:articles/bad-google-repository-signatures/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;I was able to get in touch with the Googlers responsible for the
&lt;a href="http://talks.golang.org/2013/oscon-dl.slide"&gt;dl.google.com service&lt;/a&gt;, and the root cause for the mismatched signature problem
described below has been found and fixed. I now consistently receive from
Google's servers &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Release.gpg&lt;/code&gt; files that pass apt's signature
validation on my home connection.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Google publishes &lt;a href="https://www.google.com/linuxrepositories/"&gt;Linux software repositories&lt;/a&gt; for several of their products,
including Google Chrome, which is available from the following apt source:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;deb http://dl.google.com/linux/chrome/deb/ stable main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These repositories are signed with an 8 year old 1024-bit DSA key:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;pub   1024D/7FAC5991 2007-03-08
      Key fingerprint = 4CCA 1EAF 950C EE4A B839  76DC A040 830F 7FAC 5991
uid                  Google, Inc. Linux Package Signing Key &amp;lt;linux-packages-keymaster@google.com&amp;gt;
sub   2048g/C07CB649 2007-03-08
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Asymmetric 1024-bit keys are not considered strong enough and were, for
instance, &lt;a href="http://googleonlinesecurity.blogspot.com/2013/11/out-with-old-stronger-certificates-with.html"&gt;aggressively retired&lt;/a&gt; from Google's SSL frontends almost two years
ago. Such short keys should not be used to protect the integrity of software
package repositories.&lt;/p&gt;
&lt;p&gt;Note that this key has a longer 2048-bit ElGamal subkey, which is not actually
used to produce signatures, but only for encryption. In fact, only a signing key
is needed to sign the files in a secure apt repository, and, for instance, the
&lt;a href="https://ftp-master.debian.org/keys.html"&gt;archive keys&lt;/a&gt; used to sign official debian.org repositories do not contain an
encryption subkey.&lt;/p&gt;
&lt;p&gt;Since years, many users have reported an &lt;a href="https://www.google.com/search?q=%22BADSIG+A040830F7FAC5991%22"&gt;error message&lt;/a&gt; like the following when
running &lt;code&gt;apt-get update&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;W: GPG error: http://dl.google.com stable Release: The following signatures were
invalid: BADSIG A040830F7FAC5991 Google, Inc. Linux Package Signing Key
&amp;lt;linux-packages-keymaster@google.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This error might resolve itself if &lt;code&gt;apt-get update&lt;/code&gt; is run again. Apparently,
this is due to "&lt;a href="https://code.google.com/p/chromium/issues/detail?id=107334#c12"&gt;bad pushes&lt;/a&gt;" occurring in the Google infrastructure. An example
of this can be seen in the following &lt;code&gt;curl&lt;/code&gt; output:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ curl -v http://dl.google.com/linux/chrome/deb/dists/stable/Release \
        http://dl.google.com/linux/chrome/deb/dists/stable/Release.gpg
* Hostname was NOT found in DNS cache
*   Trying 74.125.196.136...
* Connected to dl.google.com (74.125.196.136) port 80 (#0)
&amp;gt; GET /linux/chrome/deb/dists/stable/Release HTTP/1.1
&amp;gt; User-Agent: curl/7.38.0
&amp;gt; Host: dl.google.com
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 200 OK
&amp;lt; Accept-Ranges: bytes
&amp;lt; Content-Length: 1347
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Etag: &amp;quot;518b8&amp;quot;
&amp;lt; Expires: Sun, 22 Mar 2015 18:55:19 PDT
&amp;lt; Last-Modified: Fri, 20 Mar 2015 04:22:00 GMT
* Server downloads is not blacklisted
&amp;lt; Server: downloads
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-Frame-Options: SAMEORIGIN
&amp;lt; X-Xss-Protection: 1; mode=block
&amp;lt; Date: Sun, 22 Mar 2015 01:55:19 GMT
&amp;lt; Alternate-Protocol: 80:quic,p=0.5
&amp;lt; 
Origin: Google, Inc.
Label: Google
Suite: stable
Codename: stable
Version: 1.0
Date: Thu, 19 Mar 2015 22:55:29 +0000
Architectures: amd64 i386
Components: main
Description: Google chrome-linux repository.
MD5Sum:
 53375c7a2d182d85aef6218c179040ed 144 main/binary-i386/Release
 c556daf52ac818e4b11b84cb5943f6e0 4076 main/binary-i386/Packages
 867ba456bd6537e51bd344df212f4662 960 main/binary-i386/Packages.gz
 2b766b2639b57d5282a154cf6a00b172 1176 main/binary-i386/Packages.bz2
 89704f9af9e6ccd87c192de11ba4c511 145 main/binary-amd64/Release
 fa88101278271922ec9b14b030fd2423 4082 main/binary-amd64/Packages
 1ba717117027f36ff4aea9c3ea60de9e 962 main/binary-amd64/Packages.gz
 19af18f376c986d317cadb3394c60ac5 1193 main/binary-amd64/Packages.bz2
SHA1:
 59414c4175f2cc22e67ba6c30687b00c72a7eafc 144 main/binary-i386/Release
 1764c5418478b1077ada54c73eb501165ba79170 4076 main/binary-i386/Packages
 db24eafac51d3e63fd41343028fb3243f96cbed6 960 main/binary-i386/Packages.gz
 ad8be07425e88b2fdf2f6d143989cde1341a8c51 1176 main/binary-i386/Packages.bz2
 153199d8f866350b7853365a4adc95ee687603dd 145 main/binary-amd64/Release
 7ce66535b35d5fc267fe23af9947f9d27e88508b 4082 main/binary-amd64/Packages
 a72b5e46c3be8ad403df54e4cdcd6e58b2ede65a 962 main/binary-amd64/Packages.gz
 dbc7fddd28cc742ef8f0fb8c6e096455e18c35f8 1193 main/binary-amd64/Packages.bz2
* Connection #0 to host dl.google.com left intact
* Found bundle for host dl.google.com: 0x7f24e68d06a0
* Re-using existing connection! (#0) with host dl.google.com
* Connected to dl.google.com (74.125.196.136) port 80 (#0)
&amp;gt; GET /linux/chrome/deb/dists/stable/Release.gpg HTTP/1.1
&amp;gt; User-Agent: curl/7.38.0
&amp;gt; Host: dl.google.com
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 200 OK
&amp;lt; Accept-Ranges: bytes
&amp;lt; Content-Length: 198
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Etag: &amp;quot;518f4&amp;quot;
&amp;lt; Expires: Sun, 22 Mar 2015 18:55:19 PDT
&amp;lt; Last-Modified: Fri, 20 Mar 2015 04:05:00 GMT
* Server downloads is not blacklisted
&amp;lt; Server: downloads
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-Frame-Options: SAMEORIGIN
&amp;lt; X-Xss-Protection: 1; mode=block
&amp;lt; Date: Sun, 22 Mar 2015 01:55:19 GMT
&amp;lt; Alternate-Protocol: 80:quic,p=0.5
&amp;lt; 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)

iEYEABECAAYFAlULm7YACgkQoECDD3+sWZFyxACeNPuK/zQ0v+3Py1n2s09Wk/Ti
DckAni8V/gy++xIinu8OdUXv7c777V9H
=5vT6
-----END PGP SIGNATURE-----
* Connection #0 to host dl.google.com left intact
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that both the &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Release.gpg&lt;/code&gt; files were fetched with the same
HTTP connection, so the two files must have come from the same web frontend.
(Though, it is possible they were served by different backends.) However, the
detached signature in &lt;code&gt;Release.gpg&lt;/code&gt; does not match the content in &lt;code&gt;Release&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;gpgv: Signature made Fri 20 Mar 2015 12:01:58 AM EDT using DSA key ID 7FAC5991
gpgv: BAD signature from &amp;quot;Google, Inc. Linux Package Signing Key &amp;lt;linux-packages-keymaster@google.com&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Performing the same pair of fetches again, the same &lt;code&gt;Release.gpg&lt;/code&gt; file is
returned, but the &lt;code&gt;Release&lt;/code&gt; file is slightly different:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ curl -v http://dl.google.com/linux/chrome/deb/dists/stable/Release \
        http://dl.google.com/linux/chrome/deb/dists/stable/Release.gpg
* Hostname was NOT found in DNS cache
*   Trying 74.125.196.136...
* Connected to dl.google.com (74.125.196.136) port 80 (#0)
&amp;gt; GET /linux/chrome/deb/dists/stable/Release HTTP/1.1
&amp;gt; User-Agent: curl/7.38.0
&amp;gt; Host: dl.google.com
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 200 OK
&amp;lt; Accept-Ranges: bytes
&amp;lt; Content-Length: 1347
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Etag: &amp;quot;518f3&amp;quot;
&amp;lt; Expires: Sun, 22 Mar 2015 18:55:04 PDT
&amp;lt; Last-Modified: Fri, 20 Mar 2015 04:05:00 GMT
* Server downloads is not blacklisted
&amp;lt; Server: downloads
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-Frame-Options: SAMEORIGIN
&amp;lt; X-Xss-Protection: 1; mode=block
&amp;lt; Date: Sun, 22 Mar 2015 01:55:04 GMT
&amp;lt; Alternate-Protocol: 80:quic,p=0.5
&amp;lt; 
Origin: Google, Inc.
Label: Google
Suite: stable
Codename: stable
Version: 1.0
Date: Fri, 20 Mar 2015 04:02:02 +0000
Architectures: amd64 i386
Components: main
Description: Google chrome-linux repository.
MD5Sum:
 89704f9af9e6ccd87c192de11ba4c511 145 main/binary-amd64/Release
 fa88101278271922ec9b14b030fd2423 4082 main/binary-amd64/Packages
 1ba717117027f36ff4aea9c3ea60de9e 962 main/binary-amd64/Packages.gz
 19af18f376c986d317cadb3394c60ac5 1193 main/binary-amd64/Packages.bz2
 53375c7a2d182d85aef6218c179040ed 144 main/binary-i386/Release
 c556daf52ac818e4b11b84cb5943f6e0 4076 main/binary-i386/Packages
 867ba456bd6537e51bd344df212f4662 960 main/binary-i386/Packages.gz
 2b766b2639b57d5282a154cf6a00b172 1176 main/binary-i386/Packages.bz2
SHA1:
 153199d8f866350b7853365a4adc95ee687603dd 145 main/binary-amd64/Release
 7ce66535b35d5fc267fe23af9947f9d27e88508b 4082 main/binary-amd64/Packages
 a72b5e46c3be8ad403df54e4cdcd6e58b2ede65a 962 main/binary-amd64/Packages.gz
 dbc7fddd28cc742ef8f0fb8c6e096455e18c35f8 1193 main/binary-amd64/Packages.bz2
 59414c4175f2cc22e67ba6c30687b00c72a7eafc 144 main/binary-i386/Release
 1764c5418478b1077ada54c73eb501165ba79170 4076 main/binary-i386/Packages
 db24eafac51d3e63fd41343028fb3243f96cbed6 960 main/binary-i386/Packages.gz
 ad8be07425e88b2fdf2f6d143989cde1341a8c51 1176 main/binary-i386/Packages.bz2
* Connection #0 to host dl.google.com left intact
* Found bundle for host dl.google.com: 0x7ffa33d8b6a0
* Re-using existing connection! (#0) with host dl.google.com
* Connected to dl.google.com (74.125.196.136) port 80 (#0)
&amp;gt; GET /linux/chrome/deb/dists/stable/Release.gpg HTTP/1.1
&amp;gt; User-Agent: curl/7.38.0
&amp;gt; Host: dl.google.com
&amp;gt; Accept: */*
&amp;gt; 
&amp;lt; HTTP/1.1 200 OK
&amp;lt; Accept-Ranges: bytes
&amp;lt; Content-Length: 198
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Etag: &amp;quot;518f4&amp;quot;
&amp;lt; Expires: Sun, 22 Mar 2015 18:55:05 PDT
&amp;lt; Last-Modified: Fri, 20 Mar 2015 04:05:00 GMT
* Server downloads is not blacklisted
&amp;lt; Server: downloads
&amp;lt; X-Content-Type-Options: nosniff
&amp;lt; X-Frame-Options: SAMEORIGIN
&amp;lt; X-Xss-Protection: 1; mode=block
&amp;lt; Date: Sun, 22 Mar 2015 01:55:05 GMT
&amp;lt; Alternate-Protocol: 80:quic,p=0.5
&amp;lt; 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (GNU/Linux)

iEYEABECAAYFAlULm7YACgkQoECDD3+sWZFyxACeNPuK/zQ0v+3Py1n2s09Wk/Ti
DckAni8V/gy++xIinu8OdUXv7c777V9H
=5vT6
-----END PGP SIGNATURE-----
* Connection #0 to host dl.google.com left intact
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the &lt;code&gt;Date&lt;/code&gt; line in the &lt;code&gt;Release&lt;/code&gt; file is different:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;@@ -6 +6 @@
-Date: Thu, 19 Mar 2015 22:55:29 +0000
+Date: Fri, 20 Mar 2015 04:02:02 +0000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The file hashes listed in the &lt;code&gt;Release&lt;/code&gt; file are in a different order, as well,
though the actual hash values are the same. This &lt;code&gt;Release&lt;/code&gt; file &lt;strong&gt;does&lt;/strong&gt; have a
valid signature:&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;gpgv: Signature made Fri 20 Mar 2015 12:01:58 AM EDT using DSA key ID 7FAC5991
gpgv: Good signature from &amp;quot;Google, Inc. Linux Package Signing Key &amp;lt;linux-packages-keymaster@google.com&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the &lt;code&gt;Release.gpg&lt;/code&gt; files in the good and bad cases are the same, and
the same signature cannot cover two files with different content. Also note that
the same mis-signed content is &lt;a href="https://dl.google.com/linux/chrome/deb/dists/stable/Release"&gt;available via HTTPS&lt;/a&gt;, so it is probably not
caused by a MITM attack.&lt;/p&gt;
&lt;p&gt;The possibility of skew between the &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Release.gpg&lt;/code&gt; files is
precisely why &lt;a href="https://lists.debian.org/debian-devel-announce/2009/11/msg00001.html"&gt;inline signed Release files&lt;/a&gt; were introduced, but Google's
repositories use only the older format with a detached signature.&lt;/p&gt;
&lt;p&gt;It would be nice if Google could fix the underlying bug in their infrastructure
that results in mis-signed repositories being published frequently, because it
trains users to ignore cryptographic failures.&lt;/p&gt;</summary></entry><entry><title>Converting to --upstream-vcs-tag</title><link href="http://blog.mycre.ws/articles/converting-to-upstream-vcs-tag/" rel="alternate"></link><updated>2015-03-01T22:36:32+00:00</updated><author><name>Robert Edmonds</name></author><id>tag:blog.mycre.ws,2015-03-01:articles/converting-to-upstream-vcs-tag/</id><summary type="html">&lt;p&gt;Recently, the Google protobuf developers &lt;a href="https://groups.google.com/d/msg/protobuf/3qvNnYo8-SM/GSMYGGBNXfoJ"&gt;announced&lt;/a&gt; a migration of their
project's source code from an &lt;a href="https://code.google.com/p/protobuf/source/browse/"&gt;svn repository&lt;/a&gt; to a &lt;a href="https://github.com/google/protobuf"&gt;git repository&lt;/a&gt;. Up until
this point, the &lt;a href="http://anonscm.debian.org/cgit/collab-maint/protobuf.git"&gt;Debian protobuf package repository&lt;/a&gt; had only tracked upstream
development by embedding upstream release tarballs using &lt;code&gt;gbp import-orig&lt;/code&gt; with
&lt;code&gt;pristine-tar&lt;/code&gt;. It would be nice to smoothly migrate the packaging repository to
additionally make use of the &lt;code&gt;--upstream-vcs-tag&lt;/code&gt; option to &lt;code&gt;gbp import-orig&lt;/code&gt;,
the advantages of which have been &lt;a href="http://www.eyrie.org/~eagle/journal/2013-04/001.html"&gt;well described by Russ Allbery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This turned out to be harder than expected, so for reference I documented the
steps I took below. Note that this packaging repository uses the default &lt;code&gt;gbp
import-orig&lt;/code&gt; repository layout, where upstream sources are placed on a branch
named &lt;code&gt;upstream&lt;/code&gt;, and the Debian branch is named &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add an &lt;code&gt;upstream&lt;/code&gt; remote configured to track the upstream repository's &lt;code&gt;master&lt;/code&gt;
branch and tags.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git remote add --tags --track master upstream https://github.com/google/protobuf.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;upstream&lt;/code&gt; remote shouldn't be confused with our &lt;code&gt;upstream&lt;/code&gt; branch. Note
that git-remotes are local to the repository, so the &lt;code&gt;upstream&lt;/code&gt; remote should
probably be documented in the &lt;code&gt;debian/README.source&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Fetch the upstream branch and tags.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git fetch upstream
warning: no common commits
remote: Counting objects: 5210, done.
remote: Compressing objects: 100% (861/861), done.
remote: Total 5210 (delta 3869), reused 5194 (delta 3855)
Receiving objects: 100% (5210/5210), 3.57 MiB | 1.43 MiB/s, done.
Resolving deltas: 100% (3869/3869), done.
From https://github.com/google/protobuf
 * [new branch]      master     -&amp;gt; upstream/master
 * [new tag]         v2.6.0     -&amp;gt; v2.6.0
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now have a git-remote &lt;code&gt;upstream&lt;/code&gt;, a remote-tracking branch &lt;code&gt;upstream/master&lt;/code&gt;
which corresponds to the &lt;code&gt;master&lt;/code&gt; branch that upstream makes releases from, and
a release tag &lt;code&gt;v2.6.0&lt;/code&gt;. Note that the remote-tracking branch &lt;code&gt;upstream/master&lt;/code&gt;
shouldn't be confused with our &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;Up until this point, our &lt;code&gt;upstream&lt;/code&gt; branch has been synthetically generated by
importing upstream's release tarballs with &lt;code&gt;gbp import-orig&lt;/code&gt;. We need to merge
this synthetic history with &lt;code&gt;upstream/master&lt;/code&gt;. Unfortunately, I couldn't find a
way to do this without using a temporary branch.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git checkout -b tmp upstream/master
Branch tmp set up to track remote branch master from upstream.
Switched to a new branch 'tmp'
$ git merge -s ours -m \
  &amp;quot;Merge the original 'upstream' branch with upstream's new master branch&amp;quot; upstream
Merge made by the 'ours' strategy.
$ git checkout upstream
Switched to branch 'upstream'
Your branch is up-to-date with 'origin/upstream'.
$ git merge --ff-only tmp
Updating 7ed940b..9ba221e
Fast-forward
 CHANGES.txt                                                     |    49 +-
 COPYING.txt =&amp;gt; LICENSE                                          |     0
 Makefile.am                                                     |    64 +-
 Makefile.in                                                     |  1041 --
 README.txt =&amp;gt; README.md                                         |    49 +-
[...many more lines...]
$ git branch -D tmp
Deleted branch tmp (was 5f18f02).
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are now an additional 400 or so commits on our &lt;code&gt;upstream&lt;/code&gt; branch,
corresponding to the new git repository history published by upstream.&lt;/p&gt;
&lt;p&gt;Import the 2.6.0 release tarball against the upstream &lt;code&gt;v2.6.0&lt;/code&gt; tag, using the
&lt;code&gt;--upstream-vcs-tag&lt;/code&gt; option.&lt;/p&gt;
&lt;pre&gt;&lt;code class="boxed"&gt;$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
$ gbp import-orig -u 2.6.0 --upstream-vcs-tag=v2.6.0 ~/debian/tarballs/protobuf_2.6.0.orig.tar.gz
gbp:info: Importing '/home/edmonds/debian/tarballs/protobuf_2.6.0.orig.tar.gz' to branch 'upstream'...
gbp:info: Source package is protobuf
gbp:info: Upstream version is 2.6.0
pristine-tar: committed protobuf_2.6.0.orig.tar.gz.delta to branch pristine-tar
gbp:info: Merging to 'master'
gbp:info: Successfully imported version 2.6.0 of /home/edmonds/debian/tarballs/protobuf_2.6.0.orig.tar.gz
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;upstream&lt;/code&gt; branch now contains a mixture of the original series of release
tarball content imported by plain &lt;code&gt;gbp import-orig&lt;/code&gt; and the &lt;code&gt;upstream/master&lt;/code&gt;
branch as published by upstream.&lt;/p&gt;
&lt;p&gt;Updating the Debian packaging repository when new upstream releases occur only
requires a &lt;code&gt;git fetch&lt;/code&gt; to pull down upstream's updated git history and release
tag and using the &lt;code&gt;--upstream-vcs-tag&lt;/code&gt; option when importing the release
tarball with &lt;code&gt;gbp import-orig&lt;/code&gt;.&lt;/p&gt;</summary></entry><entry><title>BIND and GCC 4.9</title><link href="http://blog.mycre.ws/articles/bind-and-gcc-49/" rel="alternate"></link><updated>2014-06-06T02:19:08+00:00</updated><author><name>Robert Edmonds</name></author><id>tag:blog.mycre.ws,2014-06-06:articles/bind-and-gcc-49/</id><summary type="html">&lt;p&gt;ISC has issued an &lt;a href="https://kb.isc.org/article/AA-01167"&gt;operational notification&lt;/a&gt; advising the use of the
&lt;code&gt;-fno-delete-null-pointer-checks&lt;/code&gt; flag when compiling current versions of BIND
with GCC 4.9:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Beginning with GCC 4.9.0, code optimization in GCC now includes (by default)
an optimization which is intended to eliminate unnecessary null pointer
comparisons in compiled code.  Unfortunately this optimization removes checks
which are necessary in BIND and the demonstrated effect is to cause
unpredictable assertion failures during execution of named, resulting in
termination of the server process.&lt;/p&gt;
&lt;p&gt;Future versions of BIND will be modified so that the optimizer does not
incorrectly remove necessary checks when building from source, and until those
versions are available multiple immediate workarounds are available.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to the &lt;a href="https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html"&gt;GCC documentation&lt;/a&gt;, &lt;code&gt;-fdelete-null-pointer-checks&lt;/code&gt; performs
the following optimization, and is enabled by default even when compiling with
&lt;code&gt;-O0&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Assume that programs cannot safely dereference null pointers, and that no code
or data element resides there. This enables simple constant folding
optimizations at all optimization levels. In addition, other optimization
passes in GCC use this flag to control global dataflow analyses that eliminate
useless checks for null pointers; these assume that if a pointer is checked
after it has already been dereferenced, it cannot be null.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This optimization &lt;a href="http://www.gnu.org/software/gcc/news/null.html"&gt;dates back to 1999&lt;/a&gt; but it recently &lt;a href="https://gcc.gnu.org/gcc-4.9/porting_to.html"&gt;became more aggressive&lt;/a&gt;
in the GCC 4.9 release:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GCC might now optimize away the null pointer check in code like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int copy (int* dest, int* src, size_t nbytes) {
  memmove (dest, src, nbytes);
  if (src != NULL)
    return *src;
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The pointers passed to &lt;code&gt;memmove&lt;/code&gt; (and similar functions in &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt;) must
be non-null even when &lt;code&gt;nbytes==0&lt;/code&gt;, so GCC can use that information to remove
the check after the &lt;code&gt;memmove&lt;/code&gt; call. Calling &lt;code&gt;copy(p, NULL, 0)&lt;/code&gt; can therefore
deference a null pointer and crash.&lt;/p&gt;
&lt;p&gt;The example above needs to be fixed to avoid the invalid &lt;code&gt;memmove&lt;/code&gt; call, for
example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (nbytes != 0)
  memmove (dest, src, nbytes);
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's interesting that the ISC operational advisory labels this an "incorrect"
optimization. I wonder if this is a similar case to the &lt;a href="http://lwn.net/Articles/414467/"&gt;Glibc optimization&lt;/a&gt;
which exposed incorrect usage of &lt;code&gt;memcpy()&lt;/code&gt; in many applications, &lt;a href="https://kb.isc.org/article/AA-01085"&gt;including
BIND&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fortunately, few users should be affected by this bug, since GCC 4.9 is fairly
new. (The upcoming &lt;a href="http://fedoraproject.org/wiki/Releases/21/ChangeSet#GCC49"&gt;Fedora 21 release&lt;/a&gt; will probably be the first mainstream
distribution to ship with GCC 4.9 as the default compiler.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Debian bug &lt;a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=750760"&gt;#750760&lt;/a&gt; filed.&lt;/p&gt;</summary></entry></feed>